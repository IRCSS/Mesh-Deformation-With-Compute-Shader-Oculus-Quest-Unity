// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

struct _Vertex {
	float3 position;
	float3 velocity;
	float2 uv;
};

RWStructuredBuffer<_Vertex>  _VertexBuffer;
StructuredBuffer<float3>    _InitialPositionBuffer;

float _Time;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{

	float3 velocity = _VertexBuffer[id.x].velocity;

	velocity += float3((sin(_Time*0.5 +0.125+ _VertexBuffer[id.x].position.z * 0.16)),0., (sin(_Time + _VertexBuffer[id.x].position.y * 0.1))*1.);
	velocity *= 0.1;

	_VertexBuffer[id.x].position += velocity;
	_VertexBuffer[id.x].velocity  = velocity;
}
